Элемент aggs должен содержать фактический запрос агрегации.
Тело запроса зависит от желаемого типа агрегации. Необязательный
элемент query указывает контекст агрегации. Агрегация будет
учитывать все документы данного индекса и типа, если не указан
элемент query (мы можем считать его равным запросу match_all,
если нет иного запроса).

Элемент size указывает, сколько соответствий поиска должно
быть возвращено в ответе. Значение по умолчанию составляет 10.
Если значение size не указано, ответ будет содержать десять
соответствий из контекста запроса. Обычно, если мы
заинтересованы только в получении результатов агрегации,
необходимо присваивать элементу size значение 0, чтобы не
получить иные результаты

В широком понимании Elasticsearch поддерживает четыре типа
агрегаций:
• сегментарные агрегации;
• метрические агрегации;
• матричные агрегации;
• агрегации контейнеров.

Сегментарные агрегации разделяют данные запроса (обозначенные
контекстом query) на различные сегменты, идентифицируемые
сегментарным ключом. Такой тип агрегации оценивает документ в
контексте путем вычисления, в какой именно сегмент он попадает.
В результате мы получаем набор определенных сегментов со
своими ключами и документами.
Люди, работающие с SQL, для этого используют запрос с
оператором GROUP BY, например:
SELECT column1, count(*) FROM table1 GROUP BY
column1;
Данный запрос разделяет таблицу по разным значениям в
столбце 1 и возвращает количество документов в пределах каждогозначения столбца 1. Это пример сегментарной агрегации.
Elasticsearch поддерживает много разных типов сегментарной
агрегации, мы еще рассмотрим их в этой главе.
егментарные агрегации могут быть указаны в самом верху или
на внешнем уровне запроса агрегации. Их также можно добавлять в
другие агрегации такого типа.

Метрические агрегации работают с полями числовых типов. Они
вычисляют ценность числового поля в конкретном контексте.
Например, у нас есть таблица с результатами студенческих
экзаменов. Каждая запись хранит отметки, полученные
студентами. Метрическая агрегация позволяет вычислить разные
сводные показатели этого столбца с отметками, например сумму,
среднее, минимальное, максимальное значение и т.д.
В терминах SQL следующий запрос будет грубой аналогией того,
что может сделать метрическая агрегация:
SELECT avg(score) FROM results;



Что такое метрика (показатель) и измерения? «Метрика» (metric) —
это универсальный термин, который в мире аналитики используется
для обозначения цифрового измерения. Простой пример метрики —
объем трафика за определенный интервал времени.

Термин «измерение» (dimension) обычно употребляется для определения
дополнительной/внешней информации, зачастую — данныхстрокового типа. В текущем примере по MAC-адресу мы ищем
дополнительную, связанную с ним информацию, а именно имя
пользователя, к которому устройство приписано в системе, а также
название отдела, к которому принадлежит пользователь. Эти
сведения и являются измерениями


Агрегация суммы
Вот как написать простую агрегацию суммы:
GET bigginsight/_search
{
"aggregations": { 1
"download_sum": { 2
"sum": { 3
"field": "downloadTotal" 4
}
}
},
"size": 0 5
}

Агрегация мощности
Подсчет уникальных элементов может быть выполнен с помощью
агрегации мощности. Это похоже на поиск результата запроса, как
показано ниже:
select count(*) from (select distinct username
from usageReport) u;
Определение мощности или количества уникальных значений
для конкретного поля является довольно распространенной
задачей. Например, если у вас есть поток кликов2 (click-stream) от
различных посетителей вашего сайта, вы можете захотеть узнать,
сколько уникальных посетителей на сайте в выбранный день,
неделю или месяц.

Разберемся, как найти количество уникальных посетителей с
помощью имеющихся данных сетевого трафика:
GET bigginsight/_search
{
"aggregations": {
"unique_visitors": {
"cardinality": {
"field": "username"
}
}
},
"size": 0
}

